<<sec:event_geom_developments>>

During my PhD I have implemented from scratch the entire \ac{S2} reconstruction chain in a standalone =Python= code[fn:: \url{https://github.com/bfonta/bye_splits}]
It was previously only available in =C++=, within CMSSW [[cite:&cmssw]].
The code enables exponentially faster prototyping, testing and optimization, which are the basis of the following studies.

I developed a unified set of \texttt{Python} classes from scratch to process HGCAL samples and produce a simplified version of the TC geometry, including both \ch{Si} and scintillator sections[fn::See an example in \url{https://github.com/bfonta/bye_splits/pull/26}.].
The geometry and specific events are then deployed via dedicated interactive \texttt{Python} visualization libraries, of which I have written 2D and (a proof of concept of) 3D visualization, including how to potentially merge the visualizations from different libraries with Flask [[cite:&flask]].
The investigation and writing of the geometry revealed some bugs in the official \ac{CMSSW} [[cite:&cmssw]] implementation.
I have also learned how to deploy a web application with the 2D/3D visualizations using CERN's =Platform-as-a-Service= tool (powered by =OKD4= / =Open Shift 4=) via its convenient =S2I= service.
This is useful for information sharing and ease of access.
The framework, including the reconstruction chain, is currently being used and actively developed by a small team at LLR, and serves as an essential ground for the work of two other PhD candidates and two younger students.
This work has been presented at PyHEP 2023 [[cite:&bruno_pyhep23]].

#+NAME: fig:geom_impl_flow
#+CAPTION: Caption 
#+BEGIN_figure
#+ATTR_LATEX: :width 1.\textwidth :center
[[~/org/PhD/Thesis/figures/hgcal/flowchart.pdf]]
#+END_figure

#+NAME: fig:si_sci_custom_geoms
#+CAPTION: Taken from [[cite:&bruno_chep23]]. 
#+BEGIN_figure
#+ATTR_LATEX: :width 1.\textwidth :center
[[~/org/PhD/Thesis/figures/hgcal/SimplifiedGeometry.pdf]]
#+END_figure

#+NAME: fig:pu200photon
#+CAPTION: \num{200} \ac{PU} single photon event display using this work's custom \ac{HGCAL} geometry. The framework supports the inspection of any event in 3D. \Acp{TC} represented as transparent rectangles have an energy deposition below XXX. (Left) Individual clusters are identified with different colors. The central photon shower is clearly visible, together with some \ac{PU} clusters. The default reconstruction chain was used, with the =min_dist= clustering algorithm. (Right) The same event is displayed in terms of energy deposits in $\si{tmip}$ units.
#+BEGIN_figure
#+ATTR_LATEX: :width 1.\textwidth :center
[[~/org/PhD/Thesis/figures/hgcal/EventDisplayPu200Photon.pdf]]
#+END_figure

#+NAME: fig:pu0prongspi0
#+CAPTION: \num{200} \ac{PU} single tau event display using this work's custom \ac{HGCAL} geometry. The tau particle decayed into three charged pions and one neutral pion. The framework supports the inspection of any event in 3D. \Acp{TC} represented as transparent rectangles have an energy deposition below XXX. (Left) Individual clusters are identified with different colors. The central photon shower is clearly visible, together with some \ac{PU} clusters. The default reconstruction chain was used, with the =min_dist= clustering algorithm. (Right) The same event is displayed in terms of energy deposits in $\si{tmip}$ units.
#+BEGIN_figure
#+ATTR_LATEX: :width 1.\textwidth :center
[[~/org/PhD/Thesis/figures/hgcal/EventDisplayPU2003ProngPi0.pdf]]
#+END_figure
